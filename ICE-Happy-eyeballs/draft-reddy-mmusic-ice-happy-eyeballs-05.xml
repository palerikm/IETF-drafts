<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-reddy-mmusic-ice-happy-eyeballs-05"
     ipr="trust200902">
  <front>
    <title abbrev="Happy Eyeballs for ICE ">Happy Eyeballs Extension for
    ICE</title>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Varthur Hobli</street>

          <street>Sarjapur Marathalli Outer Ring Road</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560103</code>

          <country>India</country>
        </postal>

        <email>tireddy@cisco.com</email>
      </address>
    </author>

    <author fullname="Prashanth Patil" initials="P." surname="Patil">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street/>

          <city>Bangalore</city>

          <country>India</country>
        </postal>

        <email>praspati@cisco.com</email>
      </address>
    </author>

    <author fullname="Paal-Erik Martinsen" initials="P.E" surname="Martinsen">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Philip Pedersens Vei 22</street>

          <city>Lysaker</city>

          <region>Akershus</region>

          <code>1325</code>

          <country>Norway</country>
        </postal>

        <email>palmarti@cisco.com</email>
      </address>
    </author>

    <date/>

    <workgroup>MMUSIC</workgroup>

    <abstract>
      <t>This document provides guidelines on how to make ICE <xref
      target="RFC5245"/> conclude faster in IPv4/IPv6 dual-stack scenarios
      where broken paths exist. This will lead to more sustained IPv6
      deployment as users will no longer have an incentive to disable IPv6.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="introduction" title="Introduction">
      <t>There is a need to introduce more fairness in the handling of
      connectivity checks for different IP address families in dual-stack
      IPv4/IPv6 ICE scenarios. Section 4.1.2.1 of ICE <xref target="RFC5245"/>
      points to <xref target="RFC3484"/> for prioritizing among the different
      IP families. <xref target="RFC3484"/> is obsoleted by <xref
      target="RFC6724"/> but following the recommendations from the updated
      RFC will lead to prioritization of IPv6 over IPv4 for the same candidate
      type. Due to this, connectivity checks for candidates of the same type
      (HOST, RFLX, RELAY) are sent such that an IP address family is
      completely depleted before checks on the other address family are
      started. This results in user noticeable setup delays if the path for
      the prioritized address family is broken.</t>

      <t>To avoid such user noticeable delays when either IPv6 or IPv4
      path is broken, this specification encourages intermingling the
      different address families when connectivity checks are
      conducted. Introducing IP address family fairness into ICE
      connectivity checks will lead to more sustained dual-stack
      IPv4/IPv6 deployment as users will no longer have an incentive
      to disable IPv6. The cost is a small penalty to the address type
      that otherwise would have been prioritized.</t>
    </section>

    <section anchor="notation" title="Notational Conventions">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
        NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
        "OPTIONAL" in this document are to be interpreted as described
        in <xref target="RFC2119"/>.</t>
      
        <t>This document uses terminology defined in
           <xref target="RFC5245"/>.</t>
    </section>

    <section title="Improving ICE Dual-stack Fairness">
      <t>Candidates SHOULD be prioritized such that a long sequence of
      candidates belonging to the same address family will be
      intermingled with candidates from an alternate IP family. For
      example, promoting IPv4 candidates in the presence of many IPv6
      candidates such that an IPv4 address candidate is always present
      after a small sequence of IPv6 candidates, i.e., reordering
      candidates such that both IPv6 and IPv4 candidates get a fair
      chance during the connectivity check phase. This makes ICE
      connectivity checks more responsive to broken path failures of
      an address family.</t>

      <t>An ICE agent can choose an algorithm or a technique of its choice to
      ensure that the resulting check lists have a fair intermingled mix of
      IPv4 and IPv6 address families. Modifying the check list directly can
      lead to uncoordinated local and remote check lists that result in ICE
      taking longer to complete. The best approach is to modify the formula
      for calculating the candidate priority value described in ICE <xref
      target="RFC5245"/> section 4.1.2.1.</t>
    </section>

    <section anchor="compability" title="Compatibility">
      <t>ICE <xref target="RFC5245"/> section 4.1.2 states that the
      formula in section 4.1.2.1 SHOULD be used to calculate the
      candidate priority. The formula is as follows:</t>

      <t><figure>
          <artwork align="left"><![CDATA[
     priority = (2^24)*(type preference) + 
                (2^8)*(local preference) + 
                (2^0)*(256 - component ID)
          ]]></artwork>
        </figure></t>

      <t>ICE <xref target="RFC5245"/> section 4.1.2.2 has guidelines for how
      the type preference value should be chosen. Instead of having a static
      value for IPv4 and a static value for IPv6 type of addresses, it is
      possible to choose this value dynamically in such a way that IPv4 and
      IPv6 address candidate priorities ends up intermingled.</t>

      <t>The local and remote agent can have different algorithms for choosing
      the type preference value without any impact on coordination between the
      local and remote check list.</t>

      <t>The check list is made up by candidate pairs. A candidate pair is two
      candidates paired up and given a candidate pair priority as described in
      <xref target="RFC5245"/> section 5.7.2. Using the pair priority
      formula:</t>

      <t><figure>
          <artwork align="left"><![CDATA[
     pair priority = 2^32*MIN(G,D) + 2*MAX(G,D) + (G>D?1:0)
          ]]></artwork>
        </figure></t>

      <t>Where G is the candidate provided by the controlling agent and D the
      priority provided by the controlled agent. This ensures that the local
      and remote check lists are coordinated.</t>

      <t>Even if the two agents have different algorithms for choosing
      the candidate priority value to get an intermingled set of IPv4
      and IPv6 candidates, the resulting checklist, that is a list
      sorted by the pair priority value, will be identical on the two
      agents.</t>

      <t>The agent that has promoted IPv4 cautiously i.e. lower IPv4
      candidate priority values compared to the other agent, will
      influence the check list the most due to (2^32*MIN(G,D)) in the
      formula.</t>

      <t>These recommendations are backward compatible with a standard
      ICE implementation. If the other agent have IPv4 candidates with
      higher priorities due to intermingling, the effect is canceled
      when the checklist is formed and the pair priority formula is
      used to calculate the pair priority.</t>

    </section>

    <section title="IANA Considerations">
      <t>None.</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>STUN connectivity check using MAC computed during key exchanged in
      the signaling channel provides message integrity and data origin
      authentication as described in section 2.5 of <xref target="RFC5245"/>
      apply to this use.</t>
    </section>

    <section anchor="ack" title="Acknowledgements">
      <t>Authors would like to thank Dan Wing, Ari Keranen, Bernard Aboba,
      Martin Thomson and Jonathan Lennox for their comments and review.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.3484"?>

      <?rfc include="reference.RFC.5245"?>

      <?rfc include="reference.RFC.6724"?>
    </references>
  </back>
</rfc>
