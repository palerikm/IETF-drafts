<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-wing-tram-turn-mobility-01"
     ipr="trust200902">
  <front>
    <title abbrev="Mobility with TURN">Mobility with TURN</title>

    <author fullname="Dan Wing" initials="D." surname="Wing">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>170 West Tasman Drive</street>

          <city>San Jose</city>

          <region>California</region>

          <code>95134</code>

          <country>USA</country>
        </postal>

        <email>dwing@cisco.com</email>
      </address>
    </author>

    <author fullname="Prashanth Patil" initials="P." surname="Patil">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street/>

          <city>Bangalore</city>

          <country>India</country>
        </postal>

        <email>praspati@cisco.com</email>
      </address>
    </author>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Varthur Hobli</street>

          <street>Sarjapur Marathalli Outer Ring Road</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560103</code>

          <country>India</country>
        </postal>

        <email>tireddy@cisco.com</email>
      </address>
    </author>

    <author fullname="Paal-Erik Martinsen" initials="P.E" surname="Martinsen">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Philip Pedersens vei 22</street>

          <city>Lysaker</city>

          <region>Akershus</region>

          <code>1325</code>

          <country>Norway</country>
        </postal>

        <email>palmarti@cisco.com</email>
      </address>
    </author>

    <date/>

    <workgroup>TRAM</workgroup>

    <abstract>
      <t>It is desirable to minimize traffic disruption caused by changing IP
      address during a mobility event. One mechanism to minimize disruption is
      to expose a shorter network path to the mobility event so only the local
      network elements are aware of the changed IP address but the remote peer
      is unaware of the changed IP address.</t>

      <t>This draft provides such an IP address mobility solution using TURN.
      This is achieved by allowing a client to retain an allocation on the
      TURN server when the IP address of the client changes.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>When moving between networks, the endpoint's IP address can change or
      (due to NAT) the endpoint's public IP address can change. Such a change
      of IP address breaks upper layer protocols such as TCP and RTP. Various
      techniques exist to prevent this breakage, all tied to making the
      endpoint's IP address static (e.g., Mobile IP, Proxy Mobile IP, LISP).
      Other techniques exist, which make the change in IP address agnostic to
      the upper layer protocol (e.g., SCTP). The mechanism described in this
      document are in that last category.</t>

      <t>A TURN <xref target="RFC5766"/> server relays media packets and is
      used for a variety of purposes, including overcoming NAT and firewall
      traversal issues. The existing TURN specification does not permit a TURN
      client to reuse an allocation across client IP address changes. Due to
      this, when the IP address of the client changes, the TURN client has to
      request for a new allocation, create permissions for the remote peer,
      create channels etc. In addition to notifying the remote peer of the
      address change, and punching new pinholes through any NAT/FW that might
      be on the path.</t>

      <t>This specification describes a mechanism to seamlessly reuse
      allocations across client IP address changes without any of the hassles
      described above. A critical benefit of this technique is that the remote
      peer does not have to support mobility, or deal with any of the address
      changes. The client, that is subject to IP address changes, does all the
      work. The mobility technique works across and between network types
      (e.g., between 3G and wired Internet access), so long as the client can
      still access the TURN server. The technique should also work seamlessly
      when (D)TLS is used as a transport protocol for STUN. When there is a
      change in IP address, the client uses (D)TLS Session Resumption without
      Server-Side State as described in <xref target="RFC5077"/> to resume
      secure communication with the TURN server, using the changed client IP
      address.</t>
    </section>

    <section anchor="notation" title="Notational Conventions">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"/>.</t>

      <t>This note uses terminology defined in <xref target="RFC5245"/>, and
      the following additional terminology:</t>
    </section>

    <section anchor="MTURN" title="Mobility using TURN">
      <t>To achieve mobility, a TURN client should be able to retain an
      allocation on the TURN server across changes in the client IP address as
      a consequence of movement to other networks.</t>

      <t>When the client sends the initial Allocate request to the TURN
      server, it will include a new STUN attribute MOBILITY-TICKET (with zero
      length value), which indicates that the client is capable of mobility
      and desires a ticket. The TURN server provisions a ticket that is sent
      inside the new STUN attribute MOBILITY-TICKET in the Allocate Success
      response to the client. The ticket will be used by the client when it
      wants to refresh the allocation but with a new client IP address and
      port. This ensures that an allocation can only be refreshed by the same
      client that allocated relayed transport address. When a client's IP
      address changes due to mobility, it presents the previously obtained
      ticket in a Refresh Request to the TURN server. If the ticket is found
      to be valid, the TURN server will retain the same relayed address/port
      for the new IP address/port allowing the client to continue using
      previous channel bindings -- thus, the TURN client does not need to
      obtain new channel bindings. Any data from external peer will be
      delivered by the TURN server to this new IP address/port of the client.
      The TURN client will continue to send application data to its peers
      using the previously allocated channelBind Requests.</t>

      <figure>
        <artwork><![CDATA[
  TURN                                 TURN           Peer
  client                               server          A             
    |-- Allocate request --------------->|             | 
    |   + MOBILITY-TICKET (length=0)     |             |            
    |                                    |             |             
    |<--------------- Allocate failure --|             |             
    |                 (401 Unauthorized) |             |             
    |                                    |             |             
    |-- Allocate request --------------->|             |             
    |   + MOBILITY-TICKET (length=0)     |             |             
    |                                    |             |             
    |<---------- Allocate success resp --|             |             
    |            + MOBILITY-TICKET       |             |             
   ...                                  ...           ...
(changes IP address)
    |                                    |             |             
    |-- Refresh request ---------------->|             |
    |   + MOBILITY-TICKET                |             |             
    |                                    |             |             
    |<----------- Refresh success resp --|             |
    |   + MOBILITY-TICKET                |             |             
    |                                    |             |             
]]></artwork>
      </figure>

      <section title="Creating an Allocation">
        <section title="Sending an Allocate Request">
          <t>In addition to the process described in Section 6.1 of <xref
          target="RFC5766"/>, the client includes the MOBILITY-TICKET
          attribute with length 0. This indicates the client is a mobile node
          and wants a ticket.</t>
        </section>

        <section title="Receiving an Allocate Request">
          <t>In addition to the process described in Section 6.2 of <xref
          target="RFC5766"/>, the server does the following:</t>

          <t>If the MOBILITY-TICKET attribute is included, and has length
          zero, but TURN session mobility is forbidden by local policy, the
          server MUST reject the request with the new Mobility Forbidden error
          code. If the MOBILITY-TICKET attribute is included and has non-zero
          length then the server MUST generate an error response with an error
          code of 400 (Bad Request). Following the rules specified in <xref
          target="RFC5389"/>, if the server does not understand the
          MOBILITY-TICKET attribute, it ignores the attribute.</t>

          <t>If the server can successfully process the request create an
          allocation, the server replies with a success response that includes
          a STUN MOBILITY-TICKET attribute. TURN server can store system
          internal data into the ticket that is encrypted by a key known only
          to the TURN server and sends the ticket in the STUN MOBILITY-TICKET
          attribute as part of Allocate success response.</t>

          <t>The ticket is opaque to the client, so the structure is not
          subject to interoperability concerns, and implementations may
          diverge from this format. TURN Allocation state information is
          encrypted using 128-bit key for Advance Encryption Standard (AES)
          and 256-bit key for HMAC-SHA-256 for integrity protection.</t>
        </section>

        <section title="Receiving an Allocate Success Response">
          <t>In addition to the process described in Section 6.3 of <xref
          target="RFC5766"/>, the client will store the MOBILITY-TICKET
          attribute, if present, from the response. This attribute will be
          presented by the client to the server during a subsequent Refresh
          request to aid mobility.</t>
        </section>

        <section title="Receiving an Allocate Error Response">
          <t>If the client receives an Allocate error response with error code
          TBD (Mobility Forbidden), the error is processed as follows:</t>

          <t>o TBD (Mobility Forbidden): The request is valid, but the server
          is refusing to perform it, likely due to administrative
          restrictions. The client considers the current transaction as having
          failed. The client MAY notify the user or operator and SHOULD NOT
          retry the same request with this server until it believes the
          problem has been fixed.</t>

          <t>All other error responses must be handled as described in <xref
          target="RFC5766"/>.</t>
        </section>
      </section>

      <section anchor="refresh" title="Refreshing an Allocation">
        <section title="Sending a Refresh Request">
          <t>If a client wants to refresh an existing allocation and update
          its time-to-expiry or delete an existing allocation, it will send a
          Refresh Request as described in Section 7.1 of <xref
          target="RFC5766"/>. If the client wants to retain the existing
          allocation in case of IP change, it will include the MOBILITY-TICKET
          attribute received in the Allocate Success response. If a Refresh
          transaction was previously made, the MOBILITY-TICKET attribute
          received in the Refresh Success response of the transaction must be
          used.</t>
        </section>

        <section title="Receiving a Refresh Request">
          <t>In addition to the process described in Section 7.2 of <xref
          target="RFC5766"/>, the server does the following:</t>

          <t>If the STUN MOBILITY-TICKET attribute is included in the Refresh
          Request then the server will not retrieve the 5-tuple from the
          packet to identify an associated allocation. Instead the TURN server
          will decrypt the received ticket, verify the ticket's validity and
          retrieve the 5-tuple allocation using the ticket. If this 5-tuple
          obtained does not identify an existing allocation then the server
          MUST reject the request with an error.</t>

          <t>If the source IP address and port of the Refresh Request is
          different from the stored 5-tuple allocation, the TURN server
          proceeds with MESSAGE-INTEGRITY validation to identify the that it
          is the same user which had previously created the TURN allocation.
          If the above checks are not successful then server MUST reject the
          request with a 441 (Wrong Credentials) error.</t>

          <t>If all of the above checks pass, the TURN server understands that
          the client has moved to a new network and acquired a new IP address.
          The source IP address of the request could either be the host
          transport address or server-reflexive transport address. The server
          then updates it's 5-tuple with the new client IP address and port.
          TURN server calculates the ticket with the new 5-tuple and sends the
          new ticket in the STUN MOBILITY-TICKET attribute as part of Refresh
          Success response. If the TURN server has not received a Refresh
          Request with STUN MOBILITY-TICKET attribute but receives Send
          indications or ChannelData messages from a client, the TURN server
          may discard or queue those Send indications or ChannelData messages
          (at its discretion). Thus, it is RECOMMENDED that the client avoid
          transmitting a Send indication or ChannelData message until it has
          received an acknowledgement for the Refresh Request with STUN
          MOBILITY-TICKET attribute.</t>

          <t>To accommodate for loss of Refresh responses, a server must
          retain the old STUN MOBILITY-TICKET attribute for a period of at
          least 30 seconds to be able recognize a retransmission of Refresh
          request with the old STUN MOBILITY-TICKET attribute from the
          client.</t>
        </section>

        <section title="Receiving a Refresh Response">
          <t>In addition to the process described in Section 7.3 of <xref
          target="RFC5766"/>, the client will store the MOBILITY-TICKET
          attribute, if present, from the response. This attribute will be
          presented by the client to the server during a subsequent Refresh
          Request to aid mobility.</t>
        </section>
      </section>

      <section title="New STUN Attribute MOBILITY-TICKET">
        <t>This attribute is used to retain an Allocation on the TURN server.
        It is exchanged between the client and server to aid mobility. The
        value of MOBILITY-TICKET is encrypted and is of variable-length.</t>
      </section>

      <section title="New STUN Error Response Code">
        <t>This document defines the following new error response code: <list
            style="empty">
            <t>Mobility Forbidden: Mobility request was valid but cannot be
            performed due to administrative or similar restrictions.</t>
          </list></t>
      </section>
    </section>

    <section title="IANA Considerations">
      <t>IANA is requested to add the following attributes to the <xref
      target="iana-stun">STUN attribute registry</xref>, <list style="symbols">
          <t>MOBILITY-TICKET (0x802E, in the comprehension-optional range)</t>
        </list> and to add a new STUN error code "Mobility Forbidden" with the
      value 405 to the <xref target="iana-stun">STUN Error Codes
      registry</xref>.</t>
    </section>

    <section title="Implementation Status">
      <t>[Note to RFC Editor: Please remove this section and reference to
      <xref target="RFC6982"/> prior to publication.]</t>

      <t>This section records the status of known implementations of the
      protocol defined by this specification at the time of posting of this
      Internet-Draft, and is based on a proposal described in <xref
      target="RFC6982"/>. The description of implementations in this section
      is intended to assist the IETF in its decision processes in progressing
      drafts to RFCs. Please note that the listing of any individual
      implementation here does not imply endorsement by the IETF. Furthermore,
      no effort has been spent to verify the information presented here that
      was supplied by IETF contributors. This is not intended as, and must not
      be construed to be, a catalog of available implementations or their
      features. Readers are advised to note that other implementations may
      exist.</t>

      <t>According to <xref target="RFC6982"/>, "this will allow reviewers and
      working groups to assign due consideration to documents that have the
      benefit of running code, which may serve as evidence of valuable
      experimentation and feedback that have made the implemented protocols
      more mature. It is up to the individual working groups to use this
      information as they see fit".</t>

      <section title="open-sys">
        <t><list style="hanging">
            <t hangText="Organization: ">This is a public project, the full
            list of authors and contributors here:
            http://turnserver.open-sys.org/downloads/AUTHORS</t>

            <t hangText="Description: ">A mature open-source TURN server specs
            implementation (RFC 5766, RFC 6062, RFC 6156, etc) designed for
            high-performance applications, especially geared for WebRTC.</t>

            <t
            hangText="Implementation: ">http://code.google.com/p/rfc5766-turn-server/</t>

            <t hangText="Level of maturity: ">The Mobile ICE feature
            implementation can be qualified as "production" - it is well
            tested and fully implemented, but not widely used, yet..</t>

            <t hangText="Coverage: ">Fully implements MICE with TURN
            protocol.</t>

            <t hangText="Licensing: ">BSD:
            http://turnserver.open-sys.org/downloads/LICENSE</t>

            <t hangText="Implementation experience: ">MICE implementation is
            somewhat challenging for a multi-threaded performance-oriented
            application (because the mobile ticket information must be shared
            between the threads) but it is doable.</t>

            <t hangText="Contact: ">Oleg Moskalenko
            &lt;mom040267@gmail.com&gt;.</t>
          </list></t>
      </section>
    </section>

    <section title="Security Considerations">
      <t>TURN server MUST use strong encryption and integrity protection for
      the ticket to prevent an attacker from using a brute force mechanism to
      obtain the ticket's contents or refreshing allocations.</t>

      <t>Security considerations described in <xref target="RFC5766"/> are
      also applicable to this mechanism.</t>
    </section>

    <section title="Acknowledgements">
      <t>Thanks to Alfred Heggestad, Lishitao, Sujing Zhou, Martin Thomson,
      Emil Ivov, Oleg Moskalenko and Brandon Williams for review and
      comments.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.5245"?>

      <?rfc include='reference.RFC.5766'?>

      <?rfc include='reference.RFC.5389'
?>

      <?rfc include='reference.RFC.5077' 
?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.6982' ?>

      <reference anchor="iana-stun"
                 target="http://www.iana.org/assignments/stun-parameters/stun-pa rameters.xml">
        <front>
          <title>IANA: STUN Attributes</title>

          <author fullname="IANA" surname="IANA">
            <organization/>
          </author>

          <date month="April" year="2011"/>
        </front>
      </reference>
    </references>
  </back>
</rfc>
